-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
if _G.AutoFarmMM2IsLoaded then return end
_G.AutoFarmMM2IsLoaded = true

-- CRUMBLE COOKIEüç™ - MM2 Auto Farm PRO v3.4 (ULTIMATE FIX)
-- –ü–æ–ª–Ω—ã–π –∞–≤—Ç–æ—Ñ–∞—Ä–º —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—Å–µ—Ö –±–∞–≥–æ–≤

-- –ì–ª–æ–±–∞–ª—å–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
_G.IsLoading = true

-- ========== –≠–ö–†–ê–ù –ó–ê–ì–†–£–ó–ö–ò ==========
local function ShowLoadingScreen()
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —ç–∫—Ä–∞–Ω—ã –∑–∞–≥—Ä—É–∑–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
    for _, gui in ipairs(game.CoreGui:GetChildren()) do
        if gui.Name:find("LoadingScreen_") then
            gui:Destroy()
        end
    end

    local LoadingGui = Instance.new("ScreenGui")
    LoadingGui.Name = "LoadingScreen_"..math.random(1, 9999)
    LoadingGui.Parent = game.CoreGui
    LoadingGui.ResetOnSpawn = false

    local LoadingFrame = Instance.new("Frame")
    LoadingFrame.Name = "LoadingFrame"
    LoadingFrame.Size = UDim2.new(0, 300, 0, 150)
    LoadingFrame.AnchorPoint = Vector2.new(1, 0)
    LoadingFrame.Position = UDim2.new(1, -10, 0, 10)
    LoadingFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    LoadingFrame.BackgroundTransparency = 0.03
    LoadingFrame.BorderSizePixel = 0
    LoadingFrame.Parent = LoadingGui

    local UIStroke = Instance.new("UIStroke")
    UIStroke.Thickness = 2
    UIStroke.Color = Color3.fromRGB(100, 100, 100)
    UIStroke.Transparency = 0.5
    UIStroke.Parent = LoadingFrame

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = LoadingFrame

    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.Position = UDim2.new(0, 0, 0, 10)
    Title.BackgroundTransparency = 1
    Title.Text = "John Scripts"
    Title.TextColor3 = Color3.fromRGB(170, 0, 255)
    Title.Font = Enum.Font.ArimoBold
    Title.TextSize = 24
    Title.Parent = LoadingFrame

    local PercentText = Instance.new("TextLabel")
    PercentText.Name = "PercentText"
    PercentText.Size = UDim2.new(1, 0, 0, 40)
    PercentText.Position = UDim2.new(0, 0, 0, 50)
    PercentText.BackgroundTransparency = 1
    PercentText.Text = "0%"
    PercentText.TextColor3 = Color3.fromRGB(170, 0, 255)
    PercentText.Font = Enum.Font.LuckiestGuy
    PercentText.TextSize = 30
    PercentText.Parent = LoadingFrame

    local LoadingText = Instance.new("TextLabel")
    LoadingText.Name = "LoadingText"
    LoadingText.Size = UDim2.new(1, 0, 0, 20)
    LoadingText.Position = UDim2.new(0, 0, 0, 90)
    LoadingText.BackgroundTransparency = 1
    LoadingText.Text = "LOADING"
    LoadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
    LoadingText.Font = Enum.Font.LuckiestGuy
    LoadingText.TextSize = 14
    LoadingText.Parent = LoadingFrame

    local startTime = tick()
    local duration = 20
    
    while tick() < startTime + duration do
        local elapsed = tick() - startTime
        local progress = math.min(elapsed / duration, 1)
        PercentText.Text = math.floor(progress * 100) .. "%"
        task.wait(0.05)
    end
    
    LoadingGui:Destroy()
    _G.IsLoading = false
end

-- ========== –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ==========
local COLLECTION_SPEED = 0.05
local TELEPORT_DISTANCE = 150
local MOVEMENT_SPEED = 25
local RARE_EGG_ATTEMPT_TIME = 2
local JUMP_HEIGHT = 1.5
local JUMP_COOLDOWN = 0.6
local JUMP_CHECK_DISTANCE = 5

-- –¶–≤–µ—Ç–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
local BLACK_MAIN = Color3.fromRGB(25, 25, 25)
local BLACK_MAIN_TRANSPARENCY = 0.03
local PURPLE_ACCENT = Color3.fromRGB(170, 0, 255)
local PURPLE_ACCENT_TRANSPARENCY = 0
local WHITE_TEXT = Color3.fromRGB(255, 255, 255)
local PURPLE_HEADER = Color3.fromRGB(170, 0, 255)
local DARK_GRAY_HEADER = Color3.fromRGB(40, 40, 40)
local DARK_GRAY_HEADER_TRANSPARENCY = 0
local RED_CLOSE = Color3.fromRGB(255, 80, 80)
local GRAY_NOTE = Color3.fromRGB(170, 170, 170)

-- –®—Ä–∏—Ñ—Ç—ã
local MAIN_FONT = Enum.Font.ArimoBold
local SPECIAL_FONT = Enum.Font.FredokaOne

-- –¢–µ–∫—Å—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
local TEXT_TITLE = "John 2.0[EASTERü•ö]"
local TEXT_MINIMIZE = "-"
local TEXT_CLOSE = "X"
local TEXT_AUTO_EGG = "Egg Farm [ü•ö]"
local TEXT_AUTO_COINS = "Coin Farm [üíµ]"
local TEXT_AUTO_BOTH = "Coin & Egg Farm [üë©üèø‚Äçüåæ]"
local TEXT_AUTO_RARE = "Rare Egg Farm [üíé]"
local TEXT_ESP = "ESP [üëÅÔ∏è‚Äçüó®Ô∏è]"
local TEXT_SPAWN = "Spawn"
local TEXT_WEAPON_PLACEHOLDER = "Enter Weapon Name"
local TEXT_RARE_EGG_NOTE = "Maybe little bugs with egg which you have"

-- –†–∞–∑–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞
local TEXT_SIZE_TITLE = 18
local TEXT_SIZE_BUTTON = 14
local TEXT_SIZE_NOTE = 10
local TEXT_SIZE_WEAPON = 12

-- –°–µ—Ä–≤–∏—Å—ã
local Player = game.Players.LocalPlayer
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoinCollectedEvent = game.ReplicatedStorage.Remotes.Gameplay.CoinCollected
local RoundStartEvent = game.ReplicatedStorage.Remotes.Gameplay.RoundStart
local RoundEndEvent = game.ReplicatedStorage.Remotes.Gameplay.RoundEndFade
local autofarmstopevent = Instance.new("BindableEvent")

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
local AutofarmStarted = false
local AutofarmIN = false
local LastJumpTime = 0
local RareEggsF = false
local SavePartPos = nil
local FullEggBag = false
local CurrentCoinTypes = {}
local CollectedCoins = {}
local NeededCoinTypes = {}
local ESPEnabled = false
local roles = {}
local activeFarmButton = nil
local currentTween = nil
local processedEggs = {}
local isAttemptingRareEgg = false
local LastCoinTouchTime = 0
local MainGUI = nil

-- ========== –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò ==========
local function AntiAFK()
    local VirtualUser = game:GetService("VirtualUser")
    Player.Idled:Connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end)
end

local function GetCoinContainer()
    for _, v in workspace:GetChildren() do
        if v:FindFirstChild("CoinContainer") and v:IsA("Model") then
            return v:FindFirstChild("CoinContainer")
        end
    end
    return nil
end

local function CreateSafeZone()
    local part = Instance.new("Part")
    part.Size = Vector3.new(12, 1, 12)
    part.Position = Player.Character.HumanoidRootPart.Position + Vector3.new(0, 120, 0)
    part.Transparency = 1
    part.Anchored = true
    part.CanCollide = false
    part.Parent = workspace
    SavePartPos = part.CFrame * CFrame.new(0, 6, 0)
    return SavePartPos
end

local function SafeTeleport(position)
    if _G.IsLoading or not Player.Character or not Player.Character:FindFirstChild("HumanoidRootPart") then return end
    if currentTween then currentTween:Cancel() end
    Player.Character.HumanoidRootPart.CFrame = position
end

local function IsOnCoin()
    if not Player.Character or not Player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local root = Player.Character.HumanoidRootPart
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {Player.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    
    for x = -1, 1 do
        for z = -1, 1 do
            local offset = Vector3.new(x * 2, 0, z * 2)
            local raycastResult = workspace:Raycast(root.Position + offset, Vector3.new(0, -JUMP_CHECK_DISTANCE, 0), raycastParams)
            if raycastResult and raycastResult.Instance:IsDescendantOf(GetCoinContainer()) then
                return true
            end
        end
    end
    return false
end

local function Jump()
    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
        local humanoid = Player.Character.Humanoid
        humanoid.Jump = true
        local root = Player.Character.HumanoidRootPart
        root.Velocity = Vector3.new(root.Velocity.X, JUMP_HEIGHT * 30, root.Velocity.Z)
    end
end

local function FindTargetCoin()
    local container = GetCoinContainer()
    if not container then return nil end

    local coins = {}
    local root = Player.Character.HumanoidRootPart
    
    for _, coin in pairs(container:GetChildren()) do
        if coin:FindFirstChild("TouchInterest") then
            local coinType = coin:GetAttribute("CoinID")
            if NeededCoinTypes[coinType] and 
               (not CollectedCoins[coinType] or CollectedCoins[coinType].current < CollectedCoins[coinType].max) then
                local distance = (root.Position - coin.Position).Magnitude
                table.insert(coins, {
                    coin = coin,
                    distance = distance,
                    type = coinType
                })
            end
        end
    end
    
    table.sort(coins, function(a, b) return a.distance < b.distance end)
    return #coins > 0 and coins[1] or nil
end

local function CollectCoin(coin)
    if not coin or _G.IsLoading then return end
    
    local jumpCount = 0
    local lastJumpTime = 0
    LastCoinTouchTime = tick()
    
    while coin:FindFirstChild("TouchInterest") and AutofarmIN and not _G.IsLoading do
        if not coin:FindFirstChild("TouchInterest") then break end
        
        if tick() - LastCoinTouchTime > 2.5 and jumpCount < 2 then
            if IsOnCoin() and tick() - lastJumpTime > JUMP_COOLDOWN then
                Jump()
                lastJumpTime = tick()
                jumpCount = jumpCount + 1
            end
        end
        task.wait()
    end
end

local function UpdateNeededTypes()
    NeededCoinTypes = {}
    if activeFarmButton and activeFarmButton.Name == "AUTO_COIN_EGG" then
        NeededCoinTypes.Egg = true
        NeededCoinTypes.Coin = true
        return
    end
    
    for _, coinType in ipairs(CurrentCoinTypes) do
        NeededCoinTypes[coinType] = true
    end
end

local function StartAutofarm()
    if _G.IsLoading then return end
    AutofarmStarted = true
    AutofarmIN = true
    CollectedCoins = {}
    UpdateNeededTypes()
end

local function StopAutofarm()
    AutofarmStarted = false
    AutofarmIN = false
    if currentTween then
        currentTween:Cancel()
        currentTween = nil
    end
    autofarmstopevent:Fire()
end

-- ========== –§–£–ù–ö–¶–ò–ò –ê–í–¢–û–§–ê–†–ú–ê ==========
local function AutoRareEggs()
    while RareEggsF and task.wait(0.2) do
        if _G.IsLoading then continue end
        
        if GetCoinContainer() and Player:GetAttribute("Alive") and not isAttemptingRareEgg then
            local rareEggs = {}
            for _, egg in pairs(GetCoinContainer():GetChildren()) do
                if egg:GetAttribute("CoinID") == "RareEgg" and 
                   egg:FindFirstChildOfClass("MeshPart") and 
                   egg:FindFirstChildOfClass("MeshPart").Transparency < 0.6 then
                    table.insert(rareEggs, egg)
                end
            end
            
            table.sort(rareEggs, function(a, b)
                return (Player.Character.HumanoidRootPart.Position - a.Position).Magnitude < 
                       (Player.Character.HumanoidRootPart.Position - b.Position).Magnitude
            end)
            
            for _, egg in ipairs(rareEggs) do
                local eggId = tostring(egg.Position)
                
                if not processedEggs[eggId] then
                    isAttemptingRareEgg = true
                    processedEggs[eggId] = true
                    
                    local wasAutofarmIN = AutofarmIN
                    AutofarmIN = false
                    
                    SafeTeleport(egg.CFrame)
                    
                    local startTime = os.time()
                    while os.time() - startTime < RARE_EGG_ATTEMPT_TIME and RareEggsF and not _G.IsLoading do
                        if IsOnCoin() and tick() - LastJumpTime > JUMP_COOLDOWN then
                            Jump()
                            LastJumpTime = tick()
                        end
                        task.wait()
                    end
                    
                    AutofarmIN = wasAutofarmIN
                    
                    if FullEggBag then
                        SafeTeleport(SavePartPos)
                    end
                    
                    isAttemptingRareEgg = false
                    break
                end
            end
        end
    end
end

-- ========== GUI –§–£–ù–ö–¶–ò–ò ==========
local function CreateMainGUI()
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π GUI –µ—Å–ª–∏ –µ—Å—Ç—å
    if MainGUI then
        MainGUI:Destroy()
        MainGUI = nil
    end

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CrumbleCookieMM2"
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ResetOnSpawn = false
    MainGUI = ScreenGui

    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 300, 0, 305)
    MainFrame.AnchorPoint = Vector2.new(1, 0)
    MainFrame.Position = UDim2.new(1, -10, 0, 10)
    MainFrame.BackgroundColor3 = BLACK_MAIN
    MainFrame.BackgroundTransparency = BLACK_MAIN_TRANSPARENCY
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui

    local UIStroke = Instance.new("UIStroke")
    UIStroke.Thickness = 2
    UIStroke.Color = Color3.fromRGB(100, 100, 100)
    UIStroke.Transparency = 0.5
    UIStroke.Parent = MainFrame

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = MainFrame

    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.Position = UDim2.new(0, 0, 0, 0)
    TitleBar.BackgroundColor3 = DARK_GRAY_HEADER
    TitleBar.BackgroundTransparency = DARK_GRAY_HEADER_TRANSPARENCY
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame

    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 12)
    TitleCorner.Parent = TitleBar

    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(0.7, 0, 1, 0)
    Title.Position = UDim2.new(0.05, 0, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = TEXT_TITLE
    Title.TextColor3 = PURPLE_HEADER
    Title.Font = MAIN_FONT
    Title.TextSize = TEXT_SIZE_TITLE
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.TextYAlignment = Enum.TextYAlignment.Center
    Title.Parent = TitleBar

    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Name = "MinimizeButton"
    MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
    MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
    MinimizeButton.BackgroundColor3 = DARK_GRAY_HEADER
    MinimizeButton.BackgroundTransparency = DARK_GRAY_HEADER_TRANSPARENCY
    MinimizeButton.Text = TEXT_MINIMIZE
    MinimizeButton.TextColor3 = WHITE_TEXT
    MinimizeButton.Font = SPECIAL_FONT
    MinimizeButton.TextSize = TEXT_SIZE_TITLE
    MinimizeButton.TextYAlignment = Enum.TextYAlignment.Center
    MinimizeButton.Parent = TitleBar

    local MinimizeCorner = Instance.new("UICorner")
    MinimizeCorner.CornerRadius = UDim.new(0, 12)
    MinimizeCorner.Parent = MinimizeButton

    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -30, 0, 0)
    CloseButton.BackgroundColor3 = DARK_GRAY_HEADER
    CloseButton.BackgroundTransparency = DARK_GRAY_HEADER_TRANSPARENCY
    CloseButton.Text = TEXT_CLOSE
    CloseButton.TextColor3 = RED_CLOSE
    CloseButton.Font = SPECIAL_FONT
    CloseButton.TextSize = TEXT_SIZE_TITLE
    CloseButton.TextYAlignment = Enum.TextYAlignment.Center
    CloseButton.Parent = TitleBar

    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(0, 12)
    CloseCorner.Parent = CloseButton

    -- –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è GUI
    local isMinimized = false
    local originalSize = MainFrame.Size
    local minimizedSize = UDim2.new(0, 300, 0, 30)
    local childrenVisibility = {}

    local function ToggleMinimize()
        isMinimized = not isMinimized
        if isMinimized then
            for _, child in ipairs(MainFrame:GetChildren()) do
                if child ~= TitleBar and child ~= UICorner and child ~= UIStroke then
                    childrenVisibility[child] = child.Visible
                    child.Visible = false
                end
            end
            MainFrame.Size = minimizedSize
        else
            MainFrame.Size = originalSize
            for child, visible in pairs(childrenVisibility) do
                child.Visible = visible
            end
            childrenVisibility = {}
        end
    end

    MinimizeButton.MouseButton1Click:Connect(ToggleMinimize)

    -- –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ GUI
    local dragging = false
    local dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        MainFrame.Position = newPos
    end

    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    -- –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    local buttonHeight = 35
    local buttonSpacing = 8
    local currentY = 35

    local function CreateButton(name, text, yPos, callback)
        local button = Instance.new("TextButton")
        button.Name = name
        button.Size = UDim2.new(0.8, 0, 0, buttonHeight)
        button.Position = UDim2.new(0.1, 0, 0, yPos)
        button.BackgroundColor3 = DARK_GRAY_HEADER
        button.BackgroundTransparency = DARK_GRAY_HEADER_TRANSPARENCY
        button.Text = text..": OFF"
        button.TextColor3 = WHITE_TEXT
        button.Font = MAIN_FONT
        button.TextSize = TEXT_SIZE_BUTTON
        button.TextYAlignment = Enum.TextYAlignment.Center
        button.Parent = MainFrame
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = button
        
        button.MouseButton1Click:Connect(function()
            if _G.IsLoading then return end
            callback(button)
        end)
        return button
    end

    -- –ö–Ω–æ–ø–∫–∏ —Ñ–∞—Ä–º–∞
    local function DeactivateCurrentFarm()
        if activeFarmButton then
            activeFarmButton.Text = activeFarmButton.Text:gsub(": ON", ": OFF")
            activeFarmButton.BackgroundColor3 = DARK_GRAY_HEADER
            activeFarmButton.BackgroundTransparency = DARK_GRAY_HEADER_TRANSPARENCY
            activeFarmButton = nil
        end
    end

    local function SetFarmType(type, button)
        if activeFarmButton == button then
            DeactivateCurrentFarm()
            StopAutofarm()
            return
        end
        
        DeactivateCurrentFarm()
        CurrentCoinTypes = type
        activeFarmButton = button
        
        button.Text = button.Text:gsub(": OFF", ": ON")
        button.BackgroundColor3 = PURPLE_ACCENT
        button.BackgroundTransparency = PURPLE_ACCENT_TRANSPARENCY
        
        CollectedCoins = {}
        UpdateNeededTypes()
        StartAutofarm()
    end

    local autoEggBtn = CreateButton("AUTO_EGG", TEXT_AUTO_EGG, currentY, function(btn)
        SetFarmType({"Egg"}, btn)
    end)
    currentY = currentY + buttonHeight + buttonSpacing

    local autoCoinsBtn = CreateButton("AUTO_COINS", TEXT_AUTO_COINS, currentY, function(btn)
        SetFarmType({"Coin"}, btn)
    end)
    currentY = currentY + buttonHeight + buttonSpacing

    local autoBothBtn = CreateButton("AUTO_COIN_EGG", TEXT_AUTO_BOTH, currentY, function(btn)
        if activeFarmButton == btn then
            DeactivateCurrentFarm()
            StopAutofarm()
            return
        end
        
        DeactivateCurrentFarm()
        CurrentCoinTypes = {"Egg", "Coin"}
        NeededCoinTypes = {Egg = true, Coin = true}
        activeFarmButton = btn
        
        btn.Text = btn.Text:gsub(": OFF", ": ON")
        btn.BackgroundColor3 = PURPLE_ACCENT
        btn.BackgroundTransparency = PURPLE_ACCENT_TRANSPARENCY
        
        CollectedCoins = {}
        StartAutofarm()
    end)
    currentY = currentY + buttonHeight + buttonSpacing

    local autoRareBtn = CreateButton("AUTO_RARE_EGGS", TEXT_AUTO_RARE, currentY, function(btn)
        if RareEggsF then
            RareEggsF = false
            btn.Text = btn.Text:gsub(": ON", ": OFF")
            btn.BackgroundColor3 = DARK_GRAY_HEADER
            btn.BackgroundTransparency = DARK_GRAY_HEADER_TRANSPARENCY
            CurrentCoinTypes = {"Egg"}
            UpdateNeededTypes()
            return
        end
        
        RareEggsF = true
        btn.Text = btn.Text:gsub(": OFF", ": ON")
        btn.BackgroundColor3 = PURPLE_ACCENT
        btn.BackgroundTransparency = PURPLE_ACCENT_TRANSPARENCY
        CurrentCoinTypes = {"Egg", "RareEgg"}
        UpdateNeededTypes()
        spawn(AutoRareEggs)
    end)

    local RareEggNote = Instance.new("TextLabel")
    RareEggNote.Name = "RareEggNote"
    RareEggNote.Size = UDim2.new(0.8, 0, 0, 15)
    RareEggNote.Position = UDim2.new(0.1, 0, 0, currentY + buttonHeight - 3)
    RareEggNote.BackgroundTransparency = 1
    RareEggNote.Text = TEXT_RARE_EGG_NOTE
    RareEggNote.TextColor3 = GRAY_NOTE
    RareEggNote.Font = MAIN_FONT
    RareEggNote.TextSize = TEXT_SIZE_NOTE
    RareEggNote.TextXAlignment = Enum.TextXAlignment.Center
    RareEggNote.TextYAlignment = Enum.TextYAlignment.Center
    RareEggNote.Parent = MainFrame

    currentY = currentY + buttonHeight + buttonSpacing + 10

    -- ESP —Ñ—É–Ω–∫—Ü–∏–∏
    local function IsAlive(player)
        for i, v in pairs(roles) do
            if player.Name == i then
                return not v.Killed and not v.Dead
            end
        end
        return false
    end

    local function CreateHighlight()
        for _, v in pairs(Players:GetPlayers()) do
            if v ~= Player and v.Character and not v.Character:FindFirstChild("Highlight") then
                local highlight = Instance.new("Highlight")
                highlight.FillTransparency = 0.5
                highlight.OutlineTransparency = 0
                highlight.Parent = v.Character
            end
        end
    end

    local function UpdateHighlights()
        local Murder, Sheriff, Hero
        
        for i, v in pairs(roles) do
            if v.Role == "Murderer" then
                Murder = i
            elseif v.Role == 'Sheriff' then
                Sheriff = i
            elseif v.Role == 'Hero' then
                Hero = i
            end
        end

        for _, v in pairs(Players:GetPlayers()) do
            if v ~= Player and v.Character and v.Character:FindFirstChild("Highlight") then
                local Highlight = v.Character:FindFirstChild("Highlight")
                if v.Name == Sheriff and IsAlive(v) then
                    Highlight.FillColor = Color3.fromRGB(0, 0, 255)
                    Highlight.OutlineColor = Color3.fromRGB(0, 0, 200)
                elseif v.Name == Murder and IsAlive(v) then
                    Highlight.FillColor = Color3.fromRGB(255, 0, 0)
                    Highlight.OutlineColor = Color3.fromRGB(200, 0, 0)
                elseif v.Name == Hero and IsAlive(v) and (not Sheriff or not IsAlive(game.Players[Sheriff])) then
                    Highlight.FillColor = Color3.fromRGB(255, 255, 0)
                    Highlight.OutlineColor = Color3.fromRGB(200, 200, 0)
                else
                    Highlight.FillColor = Color3.fromRGB(0, 255, 0)
                    Highlight.OutlineColor = Color3.fromRGB(0, 200, 0)
                end
            end
        end
    end

    local ESPButton = Instance.new("TextButton")
    ESPButton.Name = "ESP"
    ESPButton.Size = UDim2.new(0.8, 0, 0, buttonHeight)
    ESPButton.Position = UDim2.new(0.1, 0, 0, currentY)
    ESPButton.BackgroundColor3 = DARK_GRAY_HEADER
    ESPButton.BackgroundTransparency = DARK_GRAY_HEADER_TRANSPARENCY
    ESPButton.TextColor3 = WHITE_TEXT
    ESPButton.Text = TEXT_ESP..": OFF"
    ESPButton.Font = MAIN_FONT
    ESPButton.TextSize = TEXT_SIZE_BUTTON
    ESPButton.TextYAlignment = Enum.TextYAlignment.Center
    ESPButton.Parent = MainFrame

    local ESPCorner = Instance.new("UICorner")
    ESPCorner.CornerRadius = UDim.new(0, 8)
    ESPCorner.Parent = ESPButton

    ESPButton.MouseButton1Click:Connect(function()
        ESPEnabled = not ESPEnabled
        
        if ESPEnabled then
            ESPButton.Text = ESPButton.Text:gsub(": OFF", ": ON")
            ESPButton.BackgroundColor3 = PURPLE_ACCENT
            ESPButton.BackgroundTransparency = PURPLE_ACCENT_TRANSPARENCY
            spawn(function()
                while ESPEnabled and not _G.IsLoading do
                    roles = game.ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
                    CreateHighlight()
                    UpdateHighlights()
                    task.wait()
                end
            end)
        else
            ESPButton.Text = ESPButton.Text:gsub(": ON", ": OFF")
            ESPButton.BackgroundColor3 = DARK_GRAY_HEADER
            ESPButton.BackgroundTransparency = DARK_GRAY_HEADER_TRANSPARENCY
            for _, v in pairs(Players:GetPlayers()) do
                if v ~= Player and v.Character and v.Character:FindFirstChild("Highlight") then
                    v.Character:FindFirstChild("Highlight"):Destroy()
                end
            end
        end
    end)

    currentY = currentY + buttonHeight + buttonSpacing

    -- –û—Ä—É–∂–∏–µ
    local WeaponBox = Instance.new("TextBox")
    WeaponBox.Name = "WeaponBox"
    WeaponBox.Size = UDim2.new(0.6, 0, 0, buttonHeight)
    WeaponBox.Position = UDim2.new(0.1, 0, 0, currentY)
    WeaponBox.BackgroundColor3 = DARK_GRAY_HEADER
    WeaponBox.BackgroundTransparency = DARK_GRAY_HEADER_TRANSPARENCY
    WeaponBox.TextColor3 = WHITE_TEXT
    WeaponBox.Font = MAIN_FONT
    WeaponBox.TextSize = TEXT_SIZE_WEAPON
    WeaponBox.TextYAlignment = Enum.TextYAlignment.Center
    WeaponBox.Text = ""
    WeaponBox.PlaceholderText = TEXT_WEAPON_PLACEHOLDER
    WeaponBox.PlaceholderColor3 = GRAY_NOTE
    WeaponBox.Parent = MainFrame

    local WeaponCorner = Instance.new("UICorner")
    WeaponCorner.CornerRadius = UDim.new(0, 8)
    WeaponCorner.Parent = WeaponBox

    local SpawnButton = Instance.new("TextButton")
    SpawnButton.Name = "SpawnButton"
    SpawnButton.Size = UDim2.new(0.18, 0, 0, buttonHeight)
    SpawnButton.Position = UDim2.new(0.72, 0, 0, currentY)
    SpawnButton.BackgroundColor3 = PURPLE_ACCENT
    SpawnButton.BackgroundTransparency = PURPLE_ACCENT_TRANSPARENCY
    SpawnButton.TextColor3 = WHITE_TEXT
    SpawnButton.Text = TEXT_SPAWN
    SpawnButton.Font = MAIN_FONT
    SpawnButton.TextSize = TEXT_SIZE_WEAPON
    SpawnButton.TextYAlignment = Enum.TextYAlignment.Center
    SpawnButton.Parent = MainFrame

    local SpawnCorner = Instance.new("UICorner")
    SpawnCorner.CornerRadius = UDim.new(0, 8)
    SpawnCorner.Parent = SpawnButton

    local function spawnWeapon(name)
        if _G.IsLoading or name == "" then return end
        
        local DataBase, PlayerData = require(game:GetService("ReplicatedStorage").Database.Sync.Item), 
                                   require(game:GetService("ReplicatedStorage").Modules.ProfileData)
        local PlayerWeapons = PlayerData.Weapons

        if not PlayerWeapons.Owned[name] then
            PlayerWeapons.Owned[name] = 1
        else
            PlayerWeapons.Owned[name] += 1
        end

        game:GetService("RunService"):BindToRenderStep("InventoryUpdate", 0, function()
            PlayerData.Weapons = PlayerWeapons
        end)

        game.Players.LocalPlayer.Character:BreakJoints()
    end

    SpawnButton.MouseButton1Click:Connect(function()
        if _G.IsLoading then return end
        local weaponName = WeaponBox.Text
        if weaponName ~= "" then
            spawnWeapon(weaponName)
            WeaponBox.Text = ""
        end
    end)

    -- –ó–∞–∫—Ä—ã—Ç–∏–µ GUI
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
        _G.AutoFarmMM2IsLoaded = false
        _G.IsLoading = nil
        MainGUI = nil
    end)

    return ScreenGui
end

-- ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ==========
CoinCollectedEvent.OnClientEvent:Connect(function(cointype, current, max)
    if _G.IsLoading then return end
    
    LastCoinTouchTime = tick()
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ –º–æ–Ω–µ—Ç
    if NeededCoinTypes[cointype] then
        CollectedCoins[cointype] = {
            current = tonumber(current),
            max = tonumber(max)
        }
    end

    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –¢–û–õ–¨–ö–û –µ—Å–ª–∏ —ç—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∏–ø –º–æ–Ω–µ—Ç—ã
    if NeededCoinTypes[cointype] then
        local shouldTeleport = true
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω—É–∂–Ω—ã–µ —Ç–∏–ø—ã –º–æ–Ω–µ—Ç
        for neededType, _ in pairs(NeededCoinTypes) do
            if not CollectedCoins[neededType] or 
               CollectedCoins[neededType].current < CollectedCoins[neededType].max then
                shouldTeleport = false
                break
            end
        end

        -- –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –í–°–ï –Ω—É–∂–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
        if shouldTeleport then
            AutofarmIN = false
            FullEggBag = true
            SafeTeleport(CreateSafeZone())
        else
            -- –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ñ–∞—Ä–º –µ—Å–ª–∏ –µ—â–µ –µ—Å—Ç—å —á—Ç–æ —Å–æ–±–∏—Ä–∞—Ç—å
            AutofarmIN = AutofarmStarted
        end
    end
end)

RoundStartEvent.OnClientEvent:Connect(function()
    if _G.IsLoading then return end
    CollectedCoins = {}
    processedEggs = {}
    UpdateNeededTypes()
    AutofarmIN = AutofarmStarted
    FullEggBag = false
end)

RoundEndEvent.OnClientEvent:Connect(function()
    if _G.IsLoading then return end
    AutofarmIN = false
    FullEggBag = false
end)

-- ========== –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ ==========
-- –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
spawn(ShowLoadingScreen)

-- –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä—ã
if not game:IsLoaded() then
    game.Loaded:Wait()
end
task.wait(3)

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
local function MainFarmLoop()
    -- –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    while _G.IsLoading do task.wait() end
    
    AntiAFK()
    while task.wait(COLLECTION_SPEED) do
        if _G.IsLoading or not AutofarmStarted or not AutofarmIN or FullEggBag 
           or isAttemptingRareEgg or not Player.Character or not GetCoinContainer() 
           or not Player:GetAttribute("Alive") then
            continue
        end

        local target = FindTargetCoin()
        if not target then continue end

        if target.distance > TELEPORT_DISTANCE then
            SafeTeleport(target.coin.CFrame)
        else
            if currentTween then currentTween:Cancel() end
            
            currentTween = TweenService:Create(
                Player.Character.HumanoidRootPart,
                TweenInfo.new(target.distance / MOVEMENT_SPEED, Enum.EasingStyle.Linear),
                {CFrame = target.coin.CFrame}
            )
            currentTween:Play()
            
            autofarmstopevent.Event:Connect(function()
                if currentTween then currentTween:Cancel() end
            end)
            
            repeat 
                if IsOnCoin() then
                    CollectCoin(target.coin)
                end
                task.wait()
            until not target.coin:FindFirstChild("TouchInterest") or not AutofarmIN or _G.IsLoading
            
            if currentTween then currentTween:Cancel() end
        end
    end
end

-- –°–æ–∑–¥–∞–µ–º GUI –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
while _G.IsLoading do task.wait() end
CreateMainGUI()

-- –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
spawn(MainFarmLoop)

-- –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
game:GetService("Players").PlayerRemoving:Connect(function(player)
    if player == Player then
        _G.AutoFarmMM2IsLoaded = false
        _G.IsLoading = nil
        if MainGUI then
            MainGUI:Destroy()
            MainGUI = nil
        end
    end
end)